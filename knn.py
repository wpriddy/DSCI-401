# -*- coding: utf-8 -*-
"""knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DMQQr-z13BC5qfW_-Z-woDrs-sftkmw1

**KNN Multinomial Class File **
"""

import pandas as pd

class KNN:
    def __init__(self, k, distance_f):
        self.k = k
        self.distance_f = distance_f
        
    def fit(self, x, y):
        if isinstance(x, pd.DataFrame):
          self.x = x.values
        self.y = y
    def predict(self, X):
        if isinstance(X, pd.DataFrame):
          X = X.values
        tuples=[]
        for i in range(len(X)):
          dist= []
          y = [] 
          tup=[]
          for j in range(len(self.x)):
            dist.append(self.distance_f(X[i], self.x[j]))
            y.append(self.y[j])
        tup.append(list(zip(dist, y)))
        sorted(tup, key=lambda x: x[0])
        tup = tup[:self.k+1]
        tuples.append(tup)
        y_mode = []
        x_1 = tuples[0][0]
        for x in x_1:
            print(x)
            y_mode.append(x[1])
        return y_mode

